/**
 * @author Mikhail Epatko (epatko-m-i@rambler.ru).
 * 02.02.17.
 *
 * Часть 2.
 * От хозяина предприятия пришли новые требования.
 * На складе Warehouse не хватает места для хранения и поэтому нужно добавить новый склад. Ваше решение?
 * Еще одно новое условие. Появились продукты, которые можно переработать после исхода срока годности.
 * Нужно расширить программу. Чтобы продукты с флагом canReproduct отправлялись на переработку.
 * Еще одно требование. Овощи,пришедшие на обработку и попадающие на клад, должны храниться на специальном
 * складе с низкой температурой. Ваши решения.
 * В данном задании надо сделать расширение кода за счет использования шаблона проектирования - декоратор.
 *
 * Помните. Вы не можете изменять код первого задания. Только расширять его.
 * Нельзя использовать instanceOf или if ("Shop".equals(storage.getName()))
 *
 *
 * RecycleFood.java - интерфейс для продуктов, которые могут быть переработаны.
 * Milk.java - класс продукта, который может быть переработан.
 * RecycleWareHouse.java - класс хранилища продуктов, которые могут быть переработаны, наследует от WareHouse.java.
 * ExtendedRecycleWareHouse.java - класс-декоратор поверх RecycleWareHouse.java (на случай, если в
 * RecycleWareHouse.java закончилось свободное место).
 * NewTrash.java - утилизация продуктов, которые не могут быть переработаны.
 * NewShop.java - магазин продуктов, которые могут быть переработаны.
 * ProcessingFactory.java - фабрика по переработке продуктов после истечения срока годности.
 * NewQualityControl.java - новый распределитель продуктов.
 */
package ru.epatko.newQualityControl;
