/**
 * 6.1. Демонстрация работы GC:
 * Создать объект User c полями и перекрытым методом finalize.
 * Создать несколько объектов User и "руками" рассчитать, сколько он будет занимать памяти.
 * Нужно найти информацию, cколько памяти занимает пустой объект без полей.
 * Добиться состояния, когда виртуальная машина вызовет сборщик мусора самостоятельно (применить ключи xmx).
 * Объяснить поведение программы.
 *
 * 6.2. Эксперименты с различными GC:
 * Используя разные ключи запуска виртуальной машины, запустить различные виды сборщика мусора.
 * Оценить поведение срабатывания различных типов сборщиков мусора для программы из первой части данного модуля.
 * Какой из сборщиков мусора подойдет наиболее оптимально для приложения заявок из второго модуля?
 * Какой тип сборщика будет оптимален для сервеного приложения?
 *
 *
 *
 *
 *
 *
 * @author Mikhail Epatko (mikhail.epatko@gmail.com).
 * 02.03.17.
 */
package ru.epatko.gc;